/* Дерев'яний = wood
   Металевий =  metal
   ******Опис програми******
   Опис використаних функцій та
   список бібліотек знаходиться в файлі Header.h.
   Реалізація всіх функцій знаходиться в файлі Source.cpp.
   Перша умова це дерев’яні кубіки з ребром 3 см.
   Друга умова це  металеві кубіки з ребром, більшим за 5 см
   В программі сперш відбувається введення масиву кубів, 
   розмір якого можна корегувати за допомогою макроса N.
   Далі відбувається введення масиву та виведення отриманих даних,
   колір та матеріал можна вводити будь-який. Потім
   підраховується кількість співпадінь за умовами які 
   задаються логічними функціями, при необхідності можно 
   передавати власні функції чи лямбда-вирази в відповідну функцію пошуку.
   Далі йде запит про продовження роботи, при відповіді yes або y
   продовжується виконання, при no або n припиняється, 
   при інщій відповіді буде виведена помилка та припинене 
   виконання програми. Програма сприймає усі відповіді
   та поля кубів незалежно від регістру.
   ******Виключення які можуть оброблятися******
* Від'ємна довжина ребра куба
* Не цифрове значення довжини куба
* Нульове значення довжини куба
* Не передбачувана відповідь на питання про вихід з программи

*/
#include "Header.h"
// Макрос який вказує кількість кубів
// через нього можна змінювати кількість введення кубів
#define N 14

int main()
{
    do {
        // Відповідь на запитання про вихід з програми
        char answer[256];
        // Масив введених кубів
        Cube cubes[N];
        setCubes(cubes, N);
        std::cout << "Your input data:" << std::endl;
        getCubes(cubes, N);
        // змінні, що відповідають кількості кубів знайдених 
        // по першій та другій умові, відповідно 
        int firstGroup = 0, secondGroup = 0;
        firstGroup = selectCube(cubes, N, cond1);
        secondGroup = selectCube(cubes, N, cond2);
        std::cout << "Total found " << firstGroup 
            + secondGroup << std::endl;
        std::cout << "Found by first condition " 
            << firstGroup << std::endl;
        std::cout << "Found by second condition " 
            << secondGroup << std::endl;
        std::cout << "Do you wish to continue (Yes or No)?" 
            << std::endl;
        // Введення відповіді
        try {
            std::cin >> answer;
            // Перевірка на помилки
            if (std::cin.fail())
            {
                throw - 3;
            }
            // Перевірка на відповідь
            if ((!strcmp(_strlwr(answer), "yes")) ||
                (!strcmp(_strlwr(answer), "y")))
                continue;
            else if ((!strcmp(_strlwr(answer), "no")) ||
                (!strcmp(_strlwr(answer), "n")))
                break;
            // Перевірка на непередбачену відповідь
            else
            {
                throw - 3;
            }
        }
        catch (int e) {
            std::cin.ignore(256, '\n');
            std::cin.clear();
            std::cout << "Invalid answer. Program will be closed"
                << std::endl;
            return 0;
        }
        
        
    } while (true);
    return 0;

}

